import React from "react";
import Head from "next/dist/shared/lib/head";
import Star from "../components/Packages_SFSP/star_rating";
import { useEffect, useState, useRef } from "react";
import axios from "axios";
import PackageId from "./package";
import ReactPaginate from "react-paginate";
import Sort from "../components/Packages_SFSP/sort";
// import SearchData from "../components/SearchBar/searchbarnew.json";
import SearchBarNew from "../components/SearchBar/SearchBarNew";
// import SearchBar from "../components/SearchBar/SearchBar";
import { useRouter } from "next/router";
import { BrowserRouter as Router, Route } from "react-router-dom";
import { get } from "mongoose";
const photos_url = "https://packages.tripzygo.travel/package_image/";
const package_url = "https://backend.tripzygo.in/packs";

function App() {
  const router = useRouter();
  const searchTerm = router.query.search;
  // console.log(searchTerm);
  const [search, setSearch] = useState('');
  // var search;
  const [sort, setSort] = useState({ sort: "web_pack_price", order: "desc" });
  // const [filterDestination, setFilterDestination] = useState([]);
  const [page, setPage] = useState(1);
  const [packages, setPackages] = useState([]);
  const [records, setRecords] = useState([]);

  // const searchArray = searchTerm.includes('=') ? searchTerm.split('=') : [searchTerm, ''];

  // console.log(searchArray[1]);

  useEffect(() => {
    if (searchTerm) {
      setSearch(searchTerm);
    }
  }, [searchTerm]);

  // useEffect(() => {
  //   // Accessing the window object in a client-side Next.js environment
  //   const queryString = globalThis.window.location.search;
  //   const urlParams = new URLSearchParams(queryString);
  //   setSearch(urlParams.get('search'))
  //   console.log('urlparams'+urlParams.get('search'));    // Output: keyword
  //   // console.log(urlParams.get('page'));
  // }, []);

  useEffect(() => {
    const getAllPackages = async () => { // Declare the callback function as async
      // const queryString = window.location.search;
      // const urlParams = new URLSearchParams(queryString);
      // console.log(urlParams);
      // console.log(urlParams.get('search'));
      // if (urlParams.get('search') == null) {
      //   search = '';
      // }
      // else { 
      //   search = ''; 
      // }
      const url = `${package_url}?q=${search}&order_by=${sort.sort}&order_by_type=${sort.order}`;

      try {
        const response = await axios.get(url);
        const data = await response.data.data;
        const recordsRef = data.length;
        setRecords(recordsRef);
        setPackages(data);
        console.log(data);
      } catch (error) {
        console.log("Error received:", error);
      }
    };

    getAllPackages();
  }, [search, sort]);



  const handleClick = (packageId, packageName) => {
    // router.push({
    //   pathname: "/package_id",
    //   query: packageId,
    //   newURL: packageName,
    // });
    router.push(`/package?id=${packageId}`);
    console.log(router.query);
  };


  const pageCount = Math.ceil(records / 10);

  const changePage = ({ selected }) => {
    setPage(selected + 1);
  };

  // Slice the records based on the current page and number of records per page
  const startIndex = (page - 1) * 10;
  const endIndex = startIndex + 10;
  const paginatedRecords = packages.slice(startIndex, endIndex);

  return (
    <div>
      <Head>
        <title>TripzyGo - Packages</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icon.png" />
        <link
          href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"
          rel="stylesheet"
          id="bootstrap-css"
        />
        <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
      </Head>
      <section
        className="breadcrumb-main pb-20 pt-16"
        style={{ backgroundImage: "url(images/banner_images/packages.webp)" }}
      >
        <div className="breadcrumb-outer">
          <div className="container" id="searchBarContainer">
            <div className="breadcrumb-content text-center">
              <nav aria-label="breadcrumb" className="d-block">
                <ul className="breadcrumb banner-content">
                  <h2 className="text-white">Get Customized Tour Packages</h2>
                  <div className="text-white mb-2">
                    {" "}
                    Exciting Offers Customised for The Best Travel Packages
                  </div>
                  <br />
                </ul>
                <SearchBarNew placeholder="Search Destination" maxOptions={5} />
                {/* <br /><br /><br /><br /><br />
                <SearchBar placeholder="Search Destination"  data={SearchData} /> */}
              </nav>
            </div>
          </div>
        </div>
        <div className="dot-overlay"></div>
      </section>

      <section className="trending pt-6 pb-0 bg-lgrey">
        <div className="container">
          <div className="row flex-row-reverse">
          <div className="col-lg-1"></div>
            <div className="col-lg-10">
              <div className="container align-items-center">
                <div className="filter">
                  <button
                    className="btn btn-default filterButton"
                    type="button"
                    data-toggle="collapse"
                    data-target="#mobile-filter"
                    aria-expanded="false"
                    aria-controls="mobile-filter"
                  >
                    Filters<span className="fa fa-filter filter-logo"></span>
                  </button>
                </div>

                {/* <div id="mobile-filter" className="collapse">
                  <Mobile_Filter
                    filterDestination={filterDestination}
                    destinations={
                      packages.destination_search ? packages.destination_search : []
                    }
                    setFilterDestination={(destinations) =>
                      setFilterDestination(destinations)
                    }
                    reset={() => setFilterDestination([])}
                  />
                </div> */}

                <Sort
                  sort={sort}
                  setSort={(sort) => setSort(sort)}
                  search={search}
                />
              </div>
              <div>
                {paginatedRecords?.map((pack) => (
                  <Router>
                    <div className="destination-list">
                      <div
                        className="trend-full bg-white rounded box-shadow overflow-hidden p-4 mb-4"
                        style={{ color: "red", fontFamily: "Poppins,sans-serif" }}
                      >
                        <div className="row">
                          <div className="col-lg-4 col-md-3">
                            <div className="trend-item2 rounded skeleton">
                              <a
                                onClick={() =>
                                  handleClick(pack?.id, pack?.name)
                                }
                                style={{
                                  backgroundImage: `url(${photos_url}${pack?.cover_image})`,
                                  objectFit: "contain",
                                  backgroundRepeat: "no-repeat",
                                  backgroundPosition: "center center",
                                }}
                                alt={pack?.description}
                                target="_blank"
                              ></a>
                            </div>
                          </div>

                          <div className="col-lg-5 col-md-6">
                            <div className="trend-content position-relative text-md-start text-center">
                              <h3 className="mb-1" style={{ fontSize: "20px" }}>
                                <a
                                  onClick={() =>
                                    handleClick(pack?.id, pack?.name)
                                  }
                                >
                                  {pack?.name}
                                </a>
                              </h3>
                              <h6
                                className="theme mb-0"
                                style={{ fontSize: "13px" }}
                              >
                                <i
                                  class="far fa-clock"
                                  style={{ fontSize: "11px" }}
                                ></i>
                                &nbsp;{pack.duration-1}N/{pack.duration}D&nbsp;&nbsp;&nbsp;&nbsp;
                                <i
                                  className="fa fa-map-marker-alt"
                                  style={{ fontSize: "11px" }}
                                ></i>
                                &nbsp;{pack.location}
                              </h6>
                            </div>
                          </div>
                          <div className="col-lg-3 col-md-3 shadowpackage px-4">
                            <div className="trend-content text-md-end text-center">
                              <div className="trend-price my-2">
                                <small style={{ fontSize: "13px", color: "#0d4980", }}>
                                  Starting From
                                </small>
                                <br />
                                <span
                                  style={{
                                    textDecoration: "line-through",
                                    fontSize: "15px",
                                  }}
                                >
                                  <i
                                    className="fa fa-inr"
                                    style={{ fontSize: "12px" }}
                                    aria-hidden="true"
                                  ></i>
                                  &nbsp;{(parseInt(pack?.web_pack_price * 1.2).toLocaleString("en-IN", { style: "currency", currency: "INR", minimumFractionDigits: 0 })).replace("₹", " ")}
                                </span>
                                <br></br>
                                <span
                                  className="mb-0"
                                  style={{
                                    color: "#0d4980",
                                    fontWeight: "500",
                                    fontSize:"16px",
                                  }}
                                >
                                  <i
                                    className="fa fa-inr"
                                    style={{ fontSize: "15px" }}
                                    aria-hidden="true"
                                  ></i>
                                  &nbsp;{(parseInt(pack?.web_pack_price).toLocaleString("en-IN", { style: "currency", currency: "INR", minimumFractionDigits: 0 })).replace("₹", " ")}
                                </span>
                                {/* <small>5% GST Extra</small><br/> */}
                                <br></br>
                                <small style={{ fontSize: "13px" }}>
                                  per Adult
                                </small>
                                {/* <div className="rating">
                                        <Star stars={pack?.star_rating_range} />
                                        <div className="pt-1 ps-2" style={{color:"black"}}>{pack?.star_rating_range}/5</div>
                                    </div> */}
                                <div className="rating">
                                  <Star stars={pack?.star_rating} />
                                  <div
                                    className="pt-1 ps-2"
                                    style={{ color: "black" }}
                                  >
                                    {pack?.star_rating}/5
                                  </div>
                                </div>
                              </div>
                              <div key={pack?.id}>
                                <button
                                  onClick={() =>
                                    handleClick(pack?.id, pack?.name)
                                  }
                                  className="nir-btn"
                                  style={{ fontSize: "13px" }}
                                >
                                  View
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </Router>
                ))}
              </div>
              <div className="container">
                <ReactPaginate
                  previousLabel={"<<"}
                  nextLabel={">>"}
                  breakLabel={"..."}
                  pageCount={pageCount}
                  marginPagesDisplayed={0}
                  pageRangeDisplayed={4}
                  onPageChange={changePage}
                  containerClassName={
                    "pagination pagination-sm justify-content-center"
                  }
                  pageClassName={"page-item"}
                  pageLinkClassName={"page-link"}
                  previousClassName={"page-item"}
                  previousLinkClassName={"page-link"}
                  nextClassName={"page-item"}
                  nextLinkClassName={"page-link"}
                  breakClassName={"page-item"}
                  breakLinkClassName={"page-link"}
                  activeClassName={"active"}
                  disabledClassName={"pagination_next-prevDisabled"}
                />
              </div>

              {/* <Pagination
                page={page}
                limit={10}
                total={records}
                setPage={(page) => setPage(page)}
              /> */}
              <br /><br />
            </div>
          </div>
          <div className="col-lg-1"></div>
        </div>
      </section>
    </div>
  );
}

export default App;
